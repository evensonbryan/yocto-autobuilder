'''
Created on Jan 6, 2013

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2012-2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''


from buildbot.steps.shell import ShellCommand
from buildbot.process.buildstep import LogLineObserver
import os

class BuildToolchainImages(ShellCommand):
    """
    Build step to build the toolchain images using bitbake.
    """
    haltOnFailure = False
    flunkOnFailure = True
    name = "Building Toolchain Images"
    def __init__(self, factory, argdict=None, **kwargs):
        """
        argdict contents:
            N/A
        """
        self.images=""
        self._pendingLogObservers = []
        self.factory = factory
        for k, v in argdict.iteritems():
            setattr(self, k, v)

        # Timeout needs to be passed to LoggingBuildStep as a kwarg
        self.timeout = 100000
        kwargs['timeout']=self.timeout
        ShellCommand.__init__(self, **kwargs)

    def start(self):
        layerversion = self.getProperty("layerversion_core")
        if int(layerversion) > 1:
            self.description = ["Building core-image-sato -c populate_sdk"]
            self.command = ". ./oe-init-build-env; bitbake core-image-sato -c populate_sdk"
        else:
            self.description = ["Building meta-toolchain-gmae"]
            self.command = ". ./oe-init-build-env; bitbake meta-toolchain-gmae"
        ShellCommand.start(self)

    def describe(self, done=False):
        description = ShellCommand.describe(self,done)
        return description
