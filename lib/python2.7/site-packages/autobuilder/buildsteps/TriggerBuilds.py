'''
Created on Jan 15, 2013

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2012-2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''


from buildbot.scheduler import Scheduler
from buildbot.steps.trigger import Trigger
from buildbot.process.properties import Properties, Property
from twisted.python import log
from twisted.internet import defer
from buildbot import config
import ast

class TriggerBuilds():
    """
    Class to trigger builds that belong to the current build.
    """
    name = "trigger"

    renderables = [ 'set_properties', 'schedulerNames', 'sourceStamps',
                    'updateSourceStamp', 'alwaysUseLatest' ]

    flunkOnFailure = True

    def __init__(self, factory, argdict=None, **kwargs):
        """
        argdict contents:
            "set_properties": {string:string} - dictionary of properties...???? beth help
            "schedulerNames": {string:{string:string}} - dictionary of shedulers with their property dictionaries
            "copy_properties":list of......???????
        """
        self.set_properties = {}
        self.schedulerNames={}
        self.copy_properties = []
        for k, v in argdict.iteritems():
            setattr(self, k, v)
        if not self.schedulerNames:
            config.error(
                "You must specify a scheduler to trigger")
        else:
            for x in self.schedulerNames.iterkeys():
                self.scheduler = 'trigger_'+x
                log.msg(self.set_properties}
                self.waitForFinish = False
                if self.schedulerNames[x]:
                    for prop in self.schedulerNames[x].iterkeys():
                        setattr(self, prop, self.schedulerNames[x][prop])
                factory.addStep(Trigger(schedulerNames=self.scheduler],
                            updateSourceStamp=False,
                            set_properties=self.set_properties,
                            waitForFinish=self.waitForFinish,
                            copy_properties=self.copy_properties))

