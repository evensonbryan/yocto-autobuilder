'''
Created on Mar 17, 2013

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2012-2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''

from buildbot.steps.shell import ShellCommand
from twisted.python import log
import os, datetime
from autobuilder.config import *

class PublishLayerTarballs(ShellCommand):
    """
    Build step to publish layer tarballs.
    """
    haltOnFailure = False
    flunkOnFailure = True
    name = "Publishing Layer Tarballs"
    def __init__(self, factory, layername, workdir, argdict=None, **kwargs):
        """
        argdict contents:
            N/A
        """
        self.factory = factory
        self.layername = layername
        self.workdir = workdir
        self.description = "Publishing " + layername + " tarball"
        self.workerdir=os.path.join(os.path.join(YOCTO_ABBASE, "yocto-worker"))
        for k, v in argdict.iteritems():
            setattr(self, k, v)
        self.timeout = 100000
        kwargs['timeout']=self.timeout
        ShellCommand.__init__(self, **kwargs)

    def start(self):
        DEST=self.getProperty("DEST")
        buildername=self.getProperty("buildername")
        revision = ""
        self.basedir=os.path.join(os.path.join(os.path.join(
                                    self.workerdir, buildername), self.workdir))
        if self.layername is not "poky":
            command = "cd " + self.layername + ";"
        else:
            command = ""
        if str(os.environ.get('PUBLISH_BUILDS')) == "True":
            if self.getProperty("custom_release_me_"+buildername):
                poky_name = self.getProperty("poky_name")
                poky_number = self.getProperty("poky_number")
                yocto_number = self.getProperty("yocto_number")
                archive_name = self.layername + "-" + poky_name + "-" + poky_number
                command = command + " git archive --format=tar HEAD "
                command = command + "--prefix=" + archive_name + "/"
                command = command + " | bzip2 -c > " + archive_name + ".tar.bz2; "
                command = command + "md5sum " + archive_name + ".tar.bz2 >> "
                command = command + self.layername + "-" + revision + ".tar.bz2.md5sum; "
                command = command + "mkdir -p " + DEST + "; rsync -av "
                command = command + archive_name +".tar.bz2* " + DEST
            elif self.getProperty("got_revision_"+self.layername):
                revision=self.getProperty("got_revision_"+self.layername)
                archive_name = self.layername + "-" + revision
                command = command + " git archive --format=tar HEAD "
                command = command + "--prefix=" + self.layername + "-" + revision + "/"
                command = command + " | bzip2 -c > " + self.layername + "-" + revision + ".tar.bz2; "
                command = command + "md5sum " + self.layername + "-" + revision + ".tar.bz2 >> "
                command = command + self.layername + "-" + revision + ".tar.bz2.md5sum; "
                command = command + "mkdir -p " + DEST + "; rsync -av "
                command = command + archive_name +".tar.bz2* " + DEST
                self.command=command
            else:
                self.command="echo 'No revision found. Skipping tarball'"
        else:
            self.command="echo 'Not publishing build, skipping step'"
        ShellCommand.start(self)
