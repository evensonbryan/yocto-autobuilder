'''
Created on Mar 17, 2013

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2012-2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''

from buildbot.steps.shell import ShellCommand
from twisted.python import log
import os, datetime
from autobuilder.config import *

class CreateIntelBSPPackage(ShellCommand):
    haltOnFailure = False
    flunkOnFailure = True
    name = "Creating BSP Packages"
    def __init__(self, factory, argdict=None, **kwargs):
        self.factory = factory
        self.machine = ""
        self.workerdir=os.path.join(os.path.join(YOCTO_ABBASE, "yocto-worker"))
        for k, v in argdict.iteritems():
            if type(v) is bool:
                setattr(self, k, str(v))
            else:
                setattr(self, k, v)
        self.description = "Creating BSP packages for " + self.machine + " tarball"
        self.timeout = 100000
        kwargs['timeout']=self.timeout
        ShellCommand.__init__(self, **kwargs)

    def start(self):
        DEST=self.getProperty("DEST")
        buildername=self.getProperty("buildername")
        if self.getProperty("custom_release_me_" + buildername):
            revision=self.getProperty("custom_release_name_" + buildername)
        else:
            revision=self.getProperty("got_revision_poky")
        self.basedir=os.path.join(self.workerdir, buildername)
        self.basedir=os.path.join(self.workerdir, buildername)
        bsptardir = self.machine
        cmd = "mkdir -p " + bsptardir + "/meta-intel; cd " + bsptardir + "; rm -rf meta-intel;"
        cmd = cmd + "git clone " + self.getProperty("repourl_meta-intel") + " meta-intel;"
        cmd = cmd + "cd meta-intel; git checkout " + self.getProperty("got_revision_meta-intel")+";"
        # issue with buildbot choking on a find exec. figure this out later.
        cmd = cmd + "for x in `find . -name .git\*`; do rm -rf $x; done;"
        cmd = cmd + "for x in `/bin/ls|egrep -v '(common|tlk|conf|README|MAINT|meta-" + self.machine.replace("-noemgd", "").replace("-lsb", "") + ")'`; do rm -rf $x; done;"
        cmd = cmd + "mkdir -p ./meta-" + self.machine.replace("-noemgd", "").replace("-lsb", "") + "/binary;"
        cmd = cmd + "cp -RL " + DEST + "/machines/" + self.machine + "/core-image-sato-" + self.machine + ".hddimage ./meta-" + self.machine.replace("-noemgd", "").replace("-lsb", "") + "/binary;"
        cmd = cmd + "cp -RL " + DEST + "/machines/" + self.machine + "/core-image-minimal-" + self.machine + ".hddimage ./meta-" + self.machine.replace("-noemgd", "").replace("-lsb", "") + "/binary;"
        cmd = cmd + "echo '' >> ./README.tlk;"
        cmd = cmd + "echo 'The following text is autogenerated during the autobuilder build process.' >> ./README.tlk;"
        cmd = cmd + "echo 'It is not a part of the repositories used to create this BSP package.' >>  ./README.tlk;"
        cmd = cmd + "echo '------------------------------------------------------------------------' >> ./README.tlk;"
        cmd = cmd + "echo 'Please note that the provided images were built using the meta-tlk layer' >> ./README.tlk;"
        cmd = cmd + "echo '(time limited kernel). Build instructions to build non-tlk images are' >> ./README.tlk;"
        cmd = cmd + "echo 'provided in ./meta-" + self.machine.replace("-noemgd", "").replace("-lsb", "") + "/README' >> ./README.tlk;"
        cmd = cmd + "echo '' >> ./README.tlk; cd ..;"
        cmd = cmd + "cd ..; tar cjvf " + self.machine + ".tar.bz2 meta-intel;"
        cmd = cmd + "mkdir -p " + DEST + "/machines/" + self.machine +";"
        cmd = cmd + "cp -RL " + self.machine + ".tar.bz2 " + DEST + "/machines/" + self.machine +";"
        self.command=cmd
        ShellCommand.start(self)
